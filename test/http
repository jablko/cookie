#!/usr/bin/env python

from mail.test import equal, ok
from twisted.application import internet, service
from twisted.enterprise import adbapi
from twisted.internet import protocol, reactor, threads
from twisted.web import http

application = service.Application('test')

pool = adbapi.ConnectionPool('MySQLdb', db='cookie', user='root')

def delete():
  conn = adbapi.Connection(pool)
  trans = adbapi.Transaction(pool, conn)

  trans.execute('DELETE FROM address')
  trans.close()

def callback(result):
  def insert():
    conn = adbapi.Connection(pool)
    trans = adbapi.Transaction(pool, conn)

    trans.execute('INSERT INTO address (address, sender) VALUES (%s, %s)', ('bob@example.com', 'abc123'))
    trans.close()

  def callback(result):
    class Client(http.HTTPClient):
      def connectionMade(self):
        self.sendCommand('GET', '/bob@example.com')

        self.endHeaders()

      def handleResponse(self, response):
        equal('abc123', response)

    class ClientFactory(protocol.ClientFactory):
      protocol = Client

    factory = ClientFactory()

    service = internet.TCPClient('localhost', 8743, factory)
    service.setServiceParent(application)

    def timeout():
      reactor.stop()

    reactor.callLater(2, timeout)

  threads.deferToThreadPool(reactor, pool.threadpool, insert).addCallback(callback)

threads.deferToThreadPool(reactor, pool.threadpool, delete).addCallback(callback)
