#!/usr/bin/env python

from mail import test
from mail.test import equal, expect, ok
from StringIO import StringIO
from twisted.internet import reactor

expect(2)

class Server(test.Server):
  def do_XFORWARD(self, rest):
    global xforward

    xforward = rest

    self.sendCode(250, 'Ok')

  def extensions(self):
    return { 'XFORWARD': ['NAME', 'ADDR', 'PORT', 'HELO', 'PROTO', 'SOURCE'] }

  def validateFrom(self, helo, origin):
    equal(xforward, 'NAME=localhost ADDR=127.0.0.1 PORT=47831 HELO=example.com PROTO=ESMTP SOURCE=LOCAL')

    return test.Server.validateFrom(self, helo, origin)

factory = test.ServerFactory()

protocol = Server()
factory.protocol.append(protocol)

reactor.listenTCP(1894, factory)

class Client(test.Client):
  def esmtpState_serverConfig(self, code, resp):
    equal(resp, '''selene Hello 127.0.0.1, nice to meet you
XFORWARD NAME ADDR PORT HELO PROTO SOURCE''')

    return test.Client.esmtpState_serverConfig(self, code, resp)

  def smtpState_from(self, code, resp):
    self.sendLine('XFORWARD NAME=localhost ADDR=127.0.0.1 PORT=47831 HELO=example.com PROTO=ESMTP SOURCE=LOCAL')
    self._expected = xrange(0, 1000)
    self._okresponse = lambda code, resp: test.Client.smtpState_from(self, code, resp)

factory = test.ClientFactory()

protocol = Client()
protocol.message = [{
  'data': StringIO('''Received: from example.com (localhost [127.0.0.1])
  by example.com (Postfix) with ESMTPA
  for <notbob@example.com>; Fri, 13 Feb 2009 15:31:30 -0800 (PST)
From: notalice@example.com

la di da
'''),
  'from': 'alice@example.com',
  'to': ['bob@example.com'] }]

factory.protocol.append(protocol)

reactor.connectTCP('localhost', 1438, factory)
