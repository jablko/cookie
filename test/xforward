#!/usr/bin/env python

from cookie.test import *
from untwisted import smtp

expect(7)

@sdfg
def _():

  #@listen().then
  @untwisted.identity(listen().then)
  @promise.resume
  def server(transport):
    transport.write('220\r\n')

    equal('EHLO example.com\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('250-example.com Success\r\n250 XFORWARD NAME ADDR PROTO HELO SOURCE PORT IDENT\r\n')

    equal('XFORWARD NAME=localhost ADDR=127.0.0.1 PORT=1234 HELO=example.com IDENT=[UNAVAILABLE] PROTO=ESMTP SOURCE=LOCAL\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('250\r\n')

    equal('QUIT\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('221\r\n')

  #@connect().then
  @untwisted.identity(connect().then)
  @promise.resume
  def client(transport):
    equal('220\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('EHLO example.com\r\n')

    equal('250-example.com Success\r\n250 XFORWARD NAME ADDR PROTO HELO SOURCE PORT IDENT\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('XFORWARD NAME=localhost ADDR=127.0.0.1 PORT=1234 HELO=example.com IDENT=[UNAVAILABLE] PROTO=ESMTP SOURCE=LOCAL\r\n')

    equal('250\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('QUIT\r\n')

    equal('221\r\n', (yield transport.protocol.dataReceived.shift()))

  return client
