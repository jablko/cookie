#!/usr/bin/env python

from cookie.test import *
from untwisted import smtp

expect(2)

@sdfg
def _():

  #@listen().then
  @untwisted.identity(listen().then)
  class _(smtp.server):

    @promise.continuate
    def start(ctx, command, state):
      if 'EHLO' == command.verb:
        ctx.transport.write(str(smtp.reply(250, 'example.com Requested mail action okay, completed', 'XFORWARD NAME ADDR PORT HELO PROTO SOURCE')))

        #return ...
        raise StopIteration(state((yield ctx.command()), state))

      if 'XFORWARD' == command.verb:
        equal('XFORWARD NAME=localhost ADDR=127.0.0.1 PORT=1234 HELO=example.com PROTO=ESMTP SOURCE=LOCAL\r\n', str(command))

        ctx.transport.write(str(smtp.reply(250)))

        #return ...
        raise StopIteration(state((yield ctx.command()), state))

      #return ...
      raise StopIteration(smtp.server.start(ctx, command, state))

  #@connect().then
  @untwisted.identity(connect().then)
  class _(smtp.client):
    class __metaclass__(smtp.client.__metaclass__):

      @promise.continuate
      def __call__(ctx, transport):
        ctx = type.__call__(ctx, transport)

        # Greeting
        yield ctx.reply()

        equal('250-example.com Requested mail action okay, completed\r\n250 XFORWARD NAME ADDR PORT HELO PROTO SOURCE\r\n', str((yield ctx.ehloCmd())))

        ctx.transport.write(str(smtp.command('XFORWARD NAME=localhost ADDR=127.0.0.1 PORT=1234 HELO=example.com PROTO=ESMTP SOURCE=LOCAL')))

        yield ctx.reply()

        #return ...
        raise StopIteration(ctx.quitCmd())
