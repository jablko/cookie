#!/usr/bin/env python

from cookie.test import *
from untwisted import smtp

expect(7)

@sdfg
def _():

  #@listen().then
  @untwisted.identity(listen().then)
  class _(smtp.server):

    @untwisted.each
    def mail():
      ctx = yield

      class sample(smtp.server.mail):
        sender = staticmethod(untwisted.each(lambda: equal('alice@example.com', str((yield)))))
        recipient = staticmethod(untwisted.each(lambda: equal('bob@example.com', str((yield)))))

        @staticmethod
        @untwisted.each
        def content():
          equal('\r\n'.join(('',
            'la di da')), (yield))

          result = timeout(1)

          @result.then
          def _(_):
            raise smtp.reply(456, 'Expect')

          yield result

      ctx = yield sample.__get__(ctx)()

      class sample(smtp.server.mail):
        sender = staticmethod(untwisted.each(lambda: equal('carol@example.com', str((yield)))))
        recipient = staticmethod(untwisted.each(lambda: equal('dave@example.com', str((yield)))))
        content = staticmethod(untwisted.each(lambda: equal('\r\n'.join(('',
          'da di la')), (yield))))

      ctx = yield sample.__get__(ctx)()

      # QUIT
      yield smtp.server.mail.__get__(ctx)()

  #@connect().then
  @untwisted.identity(connect().then)
  class _(smtp.client):

    @untwisted.each
    def mail():
      ctx = yield

      class sample(smtp.client.mail):
        sender = iter(('alice@example.com',)).next
        recipient = iter(('bob@example.com',)).next
        content = iter(('\r\n'.join(('',
          'la di da')),)).next

      sample = sample.__get__(ctx)()

      @sample.then
      class _:
        throw = staticmethod(lambda type, value, traceback: equal('456 Expect\r\n', str(value)))

      ctx = yield sample

      class sample(smtp.client.mail):
        sender = iter(('carol@example.com',)).next
        recipient = iter(('dave@example.com',)).next
        content = iter(('\r\n'.join(('',
          'da di la')),)).next

      yield sample.__get__(ctx)()

  yield _
