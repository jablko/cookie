#!/usr/bin/env python

from mail.test import equal, expect, ok
from twisted.enterprise import adbapi
from twisted.internet import protocol, reactor, threads
from twisted.web import http

expect(2)

class Client(http.HTTPClient):
  def connectionMade(self):
    self.sendCommand('GET', '/notAddrSpec')

    self.endHeaders()

  def handleResponse(self, response):
    pass

  def handleStatus(self, version, status, message):
    equal(status, '404')

class ClientFactory(protocol.ClientFactory):
  protocol = []

  def buildProtocol(self, addr):
    return self.protocol.pop(0)

factory = ClientFactory()

protocol = Client()
factory.protocol.append(protocol)

reactor.connectTCP('localhost', 8743, factory)

def timeout():
  def select():
    conn = adbapi.Connection(pool)
    trans = adbapi.Transaction(pool, conn)

    trans.execute('SELECT sender FROM address WHERE address = %s', 'notAddrSpec')
    result = trans.fetchall()
    trans.close()

    return result

  def callback(result):
    equal(result, ())

  threads.deferToThreadPool(reactor, pool.threadpool, select).addCallback(callback)

reactor.callLater(1, timeout)
