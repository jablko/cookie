#!/usr/bin/env python

from mail import test
from mail.test import equal, expect, ok
from StringIO import StringIO
from twisted.enterprise import adbapi
from twisted.internet import reactor, threads

expect(4)

def insert():
  conn = adbapi.Connection(pool)
  trans = adbapi.Transaction(pool, conn)

  trans.execute('INSERT INTO address (address, sender) VALUES (%s, %s)', ('bob@example.com', 'abc123'))
  trans.close()

def callback(result):
  factory = test.ServerFactory()

  protocol = test.Server()
  protocol.expect = [{
     'data': '''Received: from example.com (localhost [127.0.0.1])
  by example.com (Postfix) with ESMTP
  for <abc123@example.com>; Fri, 13 Feb 2009 15:31:30 -0800 (PST)
From: notalice@example.com

la di da
''',
    'from': 'alice@example.com',
    'to': ['abc123@example.com'] }]

  factory.protocol.append(protocol)

  reactor.listenTCP(1894, factory)

  factory = test.ClientFactory()

  protocol = test.Client()
  protocol.message = [{
    'data': StringIO('''Received: from example.com (localhost [127.0.0.1])
  by example.com (Postfix) with ESMTP
  for <abc123@example.com>; Fri, 13 Feb 2009 15:31:30 -0800 (PST)
From: notalice@example.com

la di da
'''),
    'from': 'alice@example.com',
    'to': ['abc123@example.com'] }]

  factory.protocol.append(protocol)

  reactor.connectTCP('localhost', 1438, factory)

  def timeout():
    def select():
      conn = adbapi.Connection(pool)
      trans = adbapi.Transaction(pool, conn)

      trans.execute('SELECT sender FROM address WHERE address = %s', 'alice@example.com')
      result = trans.fetchall()
      trans.close()

      return result

    def callback(result):
      equal(result, ())

    threads.deferToThreadPool(reactor, pool.threadpool, select).addCallback(callback)

  reactor.callLater(1, timeout)

threads.deferToThreadPool(reactor, pool.threadpool, insert).addCallback(callback)
